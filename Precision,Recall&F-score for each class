true = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
         2, 1, 1, 2, 2, 0, 0, 1, 0, 1, 1, 0, 0, 2, 1, 0, 1,
         0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 2,
         0, 0, 2, 0, 1, 0, 0, 0, 1, 1, 1, 1, 2, 0, 0, 0, 0,
         1, 0, 2, 0, 0, 0, 1, 2, 2, 1, 1, 0, 1, 1, 2, 1, 0,
         0, 0, 0, 0, 0, 2, 0, 1, 0, 2, 1, 1, 1, 1, 1]

pred = [0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 1, 2, 0, 0, 0, 0, 1,
             2, 1, 1, 2, 0, 1, 2, 1, 0, 1, 1, 0, 0, 2, 1, 0, 0,
             0, 1, 2, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 2,
             0, 2, 2, 0, 1, 0, 0, 0, 1, 1, 1, 1, 2, 0, 0, 0, 0,
             1, 0, 2, 0, 0, 0, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1,
             0, 0, 0, 0, 0, 2, 0, 1, 1, 2, 1, 0, 1, 1, 2]
import numpy as np
def class_scores(y_true, y_pred, reference):
    """Function which takes two lists and a reference indicating which class 
    to calculate the TP, FP, and FN for."""
    # .................................................................
    Y_true = set([ i for (i,v) in enumerate(y_true) if v == reference])            
    #print("Y_true:{}".format(Y_true))
    Y_pred = set([ i for (i,v) in enumerate(y_pred) if v == reference])
    #print("Y_pred:{}".format(Y_pred))
    TP = len(Y_true.intersection(Y_pred))
    # print(TP)
    FP = len(Y_pred - Y_true)
    FN = len(Y_true - Y_pred)
    return TP, FP, FN



for t in range(3): # Go over our three classes, 0=non-spam, 1=spam, 2=phishing
    (TP, FP, FN) = class_scores(true, pred, t)
    p = TP / (TP + FP)
    r = TP / (TP + FN)
    f = f_score(p, r)
    
    print('class: {:d}'.format(t))
    print('\tPrecision: {:04.3f}'.format(p))
    print('\tRecall: {:04.3f}'.format(r))
    print('\tF-score: {:04.3f}'.format(f))
    print('')
